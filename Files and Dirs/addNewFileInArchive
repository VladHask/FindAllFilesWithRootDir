Добавление файла в архив
В метод main приходит список аргументов.
Первый аргумент — полный путь к файлу fileName.
Второй аргумент — путь к zip-архиву.
Добавить файл (fileName) внутрь архива в директорию ‘new‘.
Если в архиве есть файл с таким именем, то заменить его.
Пример входных данных:
C:/result.mp3
C:/pathToTest/test.zip
Файлы внутри test.zip:
a.txt
b.txt
После запуска Solution.main архив test.zip должен иметь такое содержимое:
new/result.mp3
a.txt
b.txt
Подсказка: нужно сначала куда-то сохранить содержимое всех энтри, а потом записать в архив все энтри вместе с добавленным файлом.
Пользоваться файловой системой нельзя.
*/
import java.io.*;
import java.nio.file.Files;
import java.util.HashMap;
import java.util.Map;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;

public class Solution {
    public static void main(String[] args) throws IOException {
        
        String fileName = args[0];
        String initArchive = args[1];
        File file = new File(fileName);

        Map<String, ByteArrayOutputStream> mapArchiveFiles = new HashMap<>();
        ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream((initArchive)));
        ZipEntry entry;
        while (zipInputStream.available() != 0){
            entry = zipInputStream.getNextEntry();
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            byte[] buffer = new byte[1024];
            int count = 0;
            while ((count = zipInputStream.read(buffer)) !=-1){
                mapArchiveFiles.put(entry.getName(),byteArrayOutputStream);
            }
        }


        ZipOutputStream zipOutputStream = new ZipOutputStream(new FileOutputStream(initArchive));
            for(Map.Entry<String, ByteArrayOutputStream> pair: mapArchiveFiles.entrySet())
            {
                if (pair.getKey().substring(pair.getKey().lastIndexOf("/")).equals(file.getName())) continue;
                zipOutputStream.putNextEntry(new ZipEntry(pair.getKey()));
                zipOutputStream.write(pair.getValue().toByteArray());
            }


            zipOutputStream.putNextEntry(new ZipEntry("new/" + file.getName());
            Files.copy(file.toPath(),zipOutputStream);

    }
}
